# List 列表 
# 列表是一种有序的集合，可以存储任意类型的数据，可以包含重复元素。


# 创建列表
# 1. 使用方括号 [] 创建列表
# 2. 使用列表推导式创建列表

# 1. 使用方括号 [] 创建列表
# 创建一个包含 1, 2, 3, 4, 5 的列表
my_list = [1, 2, 3, 4, 5]
print(my_list)  # [1, 2, 3, 4, 5]


# 2. 使用列表推导式创建列表
# 创建一个包含 1, 3, 5 的列表
my_list = [num for num in range(1, 6) if num % 2 == 1]
print(my_list)  # [1, 3, 5]

# 创建一个包含 1, 2, 3, 4, 5 的列表
my_list = [num for num in range(1, 6)]
print(my_list)  # [1, 2, 3, 4, 5]   

# 创建一个包含 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 的列表
my_list = [num for num in range(1, 11)]
print(my_list)  # [1, 2, 3, 4, 5, 6, 7, 8, 9, 10] 

# 创建一个包含 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 的列表，每隔 3 个元素取一个
my_list = [num for num in range(1, 11) if num % 3 == 0]
print(my_list)  # [1, 4, 7, 10] 

# 创建一个包含 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 的列表，每隔 3 个元素取一个，并乘以 2
my_list = [num * 2 for num in range(1, 11) if num % 3 == 0]
print(my_list)  # [2, 8, 14, 20] 


# 访问列表元素
# 1. 通过索引访问元素
# 2. 通过切片访问元素

# 1. 通过索引访问元素
# 访问列表的第一个元素
print(my_list[0])  # 1


# 2. 通过切片访问元素
# 访问列表的前 3 个元素
print(my_list[:3])  # [1, 2, 3] 

# 访问列表的后 3 个元素
print(my_list[-3:])  # [7, 8, 9] 

# 访问列表的第 2 到 4 个元素
print(my_list[1:4])  # [2, 3, 4] 

# 访问列表的第 2 到 4 个元素，每隔 2 个元素取一个
print(my_list[1:4:2])  # [2, 4] 

# 访问列表的倒数第 2 个元素
print(my_list[-2])  # 9 

# 访问列表的倒数第 2 到 4 个元素
print(my_list[-2:])  # [8, 9] 

# 访问列表的倒数第 2 到 4 个元素，每隔 2 个元素取一个
print(my_list[-2::2])  # [8] 

# 访问列表的第 2 个元素，并赋值为 100
my_list[1] = 100
print(my_list)  # [1, 100, 3, 4, 5, 6, 7, 8, 9, 10] 


# 修改列表元素
# 1. 通过索引修改元素
# 2. 通过切片修改元素    
# 3. 通过赋值修改元素

# 1. 通过索引修改元素
# 修改列表的第一个元素
my_list[0] = 100
print(my_list)  # [100, 100, 3, 4, 5, 6, 7, 8, 9, 10] 


# 2. 通过切片修改元素
# 修改列表的前 3 个元素
my_list[:3] = [1, 2, 3]
print(my_list)  # [1, 2, 3, 4, 5, 6, 7, 8, 9, 10] 


# 3. 通过赋值修改元素
# 修改列表的第 2 到 4 个元素
my_list[1:4] = [200, 300, 400]
print(my_list)  # [1, 200, 300, 400, 5, 6, 7, 8, 9, 10] 


# 删除列表元素
# 1. 通过索引删除元素
# 2. 通过切片删除元素


# 1. 通过索引删除元素
# 删除列表的第一个元素
del my_list[0]
print(my_list)  # [200, 300, 400, 5, 6, 7, 8, 9, 10] 


# 2. 通过切片删除元素
# 删除列表的前 3 个元素
del my_list[:3]
print(my_list)  # [5, 6, 7, 8, 9, 10] 


# 列表运算符
# 1. + 连接两个列表
# 2. * 重复列表
# 3. in 元素是否存在于列表中
# 4. not in 元素是否不存在于列表中


# 1. + 连接两个列表
my_list1 = [1, 2, 3]
my_list2 = [4, 5, 6]
my_list3 = my_list1 + my_list2
print(my_list3)  # [1, 2, 3, 4, 5, 6] 


# 2. * 重复列表
my_list4 = [1, 2, 3] * 3
print(my_list4)  # [1, 2, 3, 1, 2, 3, 1, 2, 3] 


# 3. in 元素是否存在于列表中
if 5 in my_list:
    print("5 is in my_list")  # 5 is in my_list


# 4. not in 元素是否不存在于列表中
if 15 not in my_list:
    print("15 is not in my_list")  # 15 is not in my_list 



# 列表的遍历
# 1. for 循环遍历列表
# 2. while 循环遍历列表
# 3. 列表推导式遍历列表


# 1. for 循环遍历列表
for num in my_list:
    print(num)


# 2. while 循环遍历列表
i = 0
while i < len(my_list):
    print(my_list[i])
    i += 1


# 3. 列表推导式遍历列表
my_list5 = [num for num in my_list]
print(my_list5)  # [5, 6, 7, 9, 10, 11, 12, 13, 14] 


# 列表的嵌套
# 1.   列表中包含列表
# 2.   列表中包含字典
# 3.   列表中包含元组
# 4.   列表中包含其他列表


# 1. 列表中包含列表 

# 创建一个包含 3 个列表的列表
my_list6 = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]
print(my_list6)  # [[1, 2, 3], [4, 5, 6], [7, 8, 9]] 

# 访问列表的第一个元素
print(my_list6[0])  # [1, 2, 3] 


# 访问列表的第一个元素的第一个元素
print(my_list6[0][0])  # 1


# 2. 列表中包含字典

# 创建一个包含 3 个字典的列表 
my_list7 = [{'name': 'Alice', 'age': 20}, {'name': 'Bob', 'age': 25}, {'name': 'Charlie', 'age': 30}]
print(my_list7)  # [{'name': 'Alice', 'age': 20}, {'name': 'Bob', 'age': 25}, {'name': 'Charlie', 'age': 30}] 

# 访问列表的第一个元素
print(my_list7[0])  # {'name': 'Alice', 'age': 20}  

# 访问列表的第一个元素的 'name' 键对应的值
print(my_list7[0]['name'])  # Alice


# 3. 列表中包含元组 

# 创建一个包含 3 个元组的列表
my_list8 = [(1, 2, 3), (4, 5, 6), (7, 8, 9)]
print(my_list8)  # [(1, 2, 3), (4, 5, 6), (7, 8, 9)] 

# 访问列表的第一个元素
print(my_list8[0])  # (1, 2, 3) 


# 访问列表的第一个元素的第一个元素
print(my_list8[0][0])  # 1


# 4. 列表中包含其他列表


# 创建一个包含 3 个列表的列表
my_list9 = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]

# 创建一个包含 3 个列表的列表
my_list10 = [[10, 20, 30], [40, 50, 60], [70, 80, 90]]


# 访问列表的第一个元素的第一个元素
print(my_list9[0][0])  # 1

# 访问列表的第二个元素的第二个元素
print(my_list9[1][1])  # 5


# 访问列表的第三个元素的第三个元素
print(my_list9[2][2])  # 9


# 访问列表的第一个元素的第一个元素
print(my_list10[0][0])  # 10


# 访问列表的第二个元素的第二个元素
print(my_list10[1][1])  # 50


# 访问列表的第三个元素的第三个元素
print(my_list10[2][2])  # 90    


